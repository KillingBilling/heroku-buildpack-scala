#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

export LANG=en_US.UTF-8

BIN_DIR=$(cd $(dirname $0); pwd) # absolute path

# parse args
BUILD_DIR=$(cd $1; pwd)
CACHE_DIR=$2

#create the cache dir if it doesn't exist
mkdir -p $CACHE_DIR

curl --silent --location http://heroku-jvm-common.s3.amazonaws.com/jvm-buildpack-common.tar.gz | tar xz
. bin/java

install_java ${BUILD_DIR} "1.7"
export PATH="${BUILD_DIR}/.jdk/bin":$PATH

java -version

# home directory from perspective of SBT; we rename
# it because otherwise the project root and $HOME
# are the same, and by default .sbt has a (different)
# meaning in those two places
SBT_USER_HOME="$BUILD_DIR/.sbt_home"
# where we put the SBT binaries

mkdir -p $SBT_USER_HOME
cd $SBT_USER_HOME
git clone https://github.com/KillingBilling/sbt-extras.git
SBT_BINDIR="$SBT_USER_HOME"/sbt-extras

# chdir as sbt expects
cd $BUILD_DIR

SBT_TASKS="package"

# build app
echo "-----> Running: sbt $SBT_TASKS"

HOME="$SBT_USER_HOME" $SBT_BINDIR/sbt -sbt-create -v -Duser.home="$SBT_USER_HOME" -Dsbt.log.noformat=true $SBT_TASKS 2>&1 | sed -u 's/^/       /'
if [ "${PIPESTATUS[*]}" != "0 0" ]; then
  echo " !     Failed to build app with sbt"
  exit 1
fi

cp -a target/scala-2.10/*.jar stage/lib

# remove ivy and sbt cache
rm -rf $SBT_USER_HOME/.ivy2
rm -rf $SBT_USER_HOME/.sbt
